{"version":3,"sources":["redux/contacts/contacts.selectors.js","components/contactForm/ContactForm.js","redux/contacts/contacts.operations.js","components/filter/Filter.js","components/contactList/ContactList.js","pages/contacts/Contacts.js","components/contactForm/ContactForm.module.css","components/filter/Filtter.module.css","components/contactList/ContactList.module.css"],"names":["getContactsSelector","state","contacts","items","filterSelector","filter","getLoader","loading","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","find","alert","addContact","reset","this","getContacts","onSubmit","className","styles","inputData","type","placeholder","onChange","pattern","title","required","addBtn","Component","prototypes","PropTypes","func","isRequired","mapDispatchToProps","dispatch","a","getContactsRequest","axios","get","data","getContactsSuccess","getContactsFailure","addContactRequest","post","response","addContactSuccess","addContactFailure","connect","evt","filterContact","input","onDelete","id","removeContactRequest","delete","removeContactSuccess","removeContactFailure","color","height","width","contactsList","map","deleteBtn","onClick","Contacts","module","exports"],"mappings":"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","file":"static/js/4.02b4411b.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst getContactsSelector = (state) => state.contacts.items;\n\nconst filterSelector = (state) => state.contacts.filter;\n\nconst getLoader = (state) => state.contacts.loading;\n\nconst getFilteredContacts = createSelector(\n  [getContactsSelector, filterSelector],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nexport { getContactsSelector, filterSelector, getLoader, getFilteredContacts };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  getContacts,\n  addContact,\n} from \"../../redux/contacts/contacts.operations\";\nimport { getContactsSelector } from \"../../redux/contacts/contacts.selectors\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const contactExist = this.props.contacts.find(\n      (contact) => contact.name === this.state.name\n    );\n\n    if (contactExist) {\n      alert(`Contact <-- ${this.state.name} --> already exists`);\n      return;\n    }\n    this.props.addContact(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} >\n          <label>\n            <input\n              className={styles.inputData}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name:\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n\n          <label>\n            <input\n              className={styles.inputData}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Number:\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\" className={styles.addBtn}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.prototypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: getContactsSelector(state),\n});\n\nconst mapDispatchToProps = { getContacts, addContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import axios from \"axios\";\nimport {\n  addContactFailure,\n  addContactRequest,\n  addContactSuccess,\n  getContactsFailure,\n  getContactsRequest,\n  getContactsSuccess,\n  removeContactFailure,\n  removeContactRequest,\n  removeContactSuccess,\n} from \"./contacts.actions\";\n\n// axios.defaults.baseURL = \"http://localhost:3001\";\n\nconst getContacts = () => async (dispatch) => {\n  dispatch(getContactsRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(getContactsSuccess(data));\n  } catch (error) {\n    dispatch(getContactsFailure(error));\n  }\n};\n\nconst addContact =\n  ({ name, number }) =>\n  async (dispatch) => {\n    const contact = { name, number };\n    dispatch(addContactRequest());\n    try {\n      const response = await axios.post(\"/contacts\", contact);\n      dispatch(addContactSuccess(response.data));\n    } catch (error) {\n      dispatch(addContactFailure(error));\n    }\n  };\n\nconst removeContact = (id) => async (dispatch) => {\n  dispatch(removeContactRequest());\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(removeContactSuccess(id));\n  } catch (error) {\n    dispatch(removeContactFailure(error));\n  }\n};\n\nexport { getContacts, addContact, removeContact };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./Filtter.module.css\";\nimport PropTypes from \"prop-types\";\n\nimport { filterSelector } from \"../../redux/contacts/contacts.selectors\";\nimport { filterContact } from \"../../redux/contacts/contacts.actions\";\n\nconst Filter = ({ filter, handleChange }) => {\n  return (\n    <label>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find contact by name\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  filter: filterSelector(state),\n});\n\nconst mapDispatchToProps = {\n  handleChange: (evt) => filterContact(evt.target.value),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"react-loader-spinner\";\n\nimport { removeContact } from \"../../redux/contacts/contacts.operations\";\nimport {\n  getFilteredContacts,\n  filterSelector,\n  getLoader,\n} from \"../../redux/contacts/contacts.selectors\";\n\nconst ContactList = ({ contacts, onDelete, loading }) => {\n  return (\n    <>\n      {loading && (\n        <Loader type=\"ThreeDots\" color=\"#000\" height={80} width={80} />\n      )}\n      <ul className={styles.contactsList}>\n        {contacts.map((contact) => (\n          <li key={contact.id} className={styles.contact}>\n            {contact.name}: {contact.number}\n            <button\n              className={styles.deleteBtn}\n              type=\"button\"\n              onClick={() => onDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: getFilteredContacts(state),\n    filter: filterSelector(state),\n    loading: getLoader(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  onDelete: removeContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport ContactForm from \"../../components/contactForm/ContactForm\";\nimport Filter from \"../../components/filter/Filter\";\nimport ContactList from \"../../components/contactList/ContactList\";\n\nconst Contacts = () => {\n  return (\n    <div className=\"container\">\n      <h2>Phonebook:</h2>\n      <ContactForm />\n\n      <h2>Contacts:</h2>\n      <Filter />\n\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputData\":\"ContactForm_inputData__1g7Li\",\"addBtn\":\"ContactForm_addBtn__3QR5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filtter_input__1Uqsy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__2XVR2\",\"contact\":\"ContactList_contact__1slp-\",\"deleteBtn\":\"ContactList_deleteBtn__1vuR6\"};"],"sourceRoot":""}